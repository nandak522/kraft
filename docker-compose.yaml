services:
  kafka-base:
    build:
      context: kafka
      dockerfile: Dockerfile
    image: local/kafka-base:v3.5.0

  kafka1:
    container_name: kafka1
    image: local/kafka-base:v3.5.0
    command: [ "sh", "-c", "/opt/kafka/bin/custom-start.sh" ]
    environment:
      # Below UUID is generated from https://uuid.rocks/short
      CLUSTER_ID: ${CLUSTER_ID:-bPpdXy8F6e7P49b2LCPH69}
      CUSTOM_NODE_ID: 1
      CUSTOM_LOG_DIRS: "/opt/kafka-kraft-data"
      CUSTOM_LISTENERS: "BROKER://:19092,CONTROLLER://:19093"
      CUSTOM_ROLES: "broker,controller"
      CUSTOM_CONTROLLER_QUORUM_VOTERS: "1@kafka1:19093,2@kafka2:29093,3@kafka3:39093"
      CUSTOM_INTER_BROKER_LISTENER_NAME: "BROKER"
      JMX_PORT: 19999
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
    ports:
      - 18092:18092
      - 19092:19092
    expose:
      - "18092"
      - "19092"

  kafka2:
    container_name: kafka2
    image: local/kafka-base:v3.5.0
    command: [ "sh", "-c", "/opt/kafka/bin/custom-start.sh" ]
    environment:
      # Below UUID is generated from https://uuid.rocks/short
      CLUSTER_ID: ${CLUSTER_ID:-bPpdXy8F6e7P49b2LCPH69}
      CUSTOM_NODE_ID: 2
      CUSTOM_LOG_DIRS: "/opt/kafka-kraft-data"
      CUSTOM_LISTENERS: "BROKER://:29092,CONTROLLER://:29093"
      CUSTOM_ROLES: "broker,controller"
      CUSTOM_CONTROLLER_QUORUM_VOTERS: "1@kafka1:19093,2@kafka2:29093,3@kafka3:39093"
      CUSTOM_INTER_BROKER_LISTENER_NAME: "BROKER"
      JMX_PORT: 29999
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
    ports:
      - 28092:28092
      - 29092:29092
    expose:
      - "28092"
      - "29092"

  kafka3:
    container_name: kafka3
    image: local/kafka-base:v3.5.0
    command: [ "sh", "-c", "/opt/kafka/bin/custom-start.sh" ]
    environment:
      # Below UUID is generated from https://uuid.rocks/short
      CLUSTER_ID: ${CLUSTER_ID:-bPpdXy8F6e7P49b2LCPH69}
      CUSTOM_NODE_ID: 3
      CUSTOM_LOG_DIRS: "/opt/kafka-kraft-data"
      CUSTOM_LISTENERS: "BROKER://:39092,CONTROLLER://:39093"
      CUSTOM_ROLES: "broker,controller"
      CUSTOM_CONTROLLER_QUORUM_VOTERS: "1@kafka1:19093,2@kafka2:29093,3@kafka3:39093"
      CUSTOM_INTER_BROKER_LISTENER_NAME: "BROKER"
      JMX_PORT: 39999
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
    ports:
      - 38092:38092
      - 39092:39092
    expose:
      - "38092"
      - "39092"

  kafdrop:
    container_name: kafdrop
    depends_on:
      - "kafka1"
    image: obsidiandynamics/kafdrop:3.31.0
    ports:
      - 9000:9000
    expose:
      - "9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19092,kafka2:29092,kafka3:39092"
      SERVER_SERVLET_CONTEXTPATH: "/"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka1:19092,kafka2:29092,kafka3:39092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-client:
    build:
      context: clients
      dockerfile: Dockerfile
    image: local/kafka-client:v2.1.1

  producer:
    image: local/kafka-client:v2.1.1
    container_name: kafka-producer
    volumes:
      - ./clients/producer.py:/app/producer.py
    environment:
      - BROKERS=kafka1:19092,kafka2:29092,kafka3:39092
      - TOPIC=test
    command: [ "sh", "-c", "python3", "/app/producer.py" ]

  consumer:
    command: [ "sh", "-c", "python3", "/app/consumer.py" ]
    image: local/kafka-client:v2.1.1
    container_name: kafka-consumer
    volumes:
      - ./clients/consumer.py:/app/consumer.py
    environment:
      - BROKERS=kafka1:19092,kafka2:29092,kafka3:39092
      - TOPIC=test
      - CONSUMER_GROUP=test
      - CONSUMER_INSTANCE_ID=1
